[{"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\AudiobooksCrudApp.js":"1","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\store\\store.js":"2","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\reducers\\bookReducers.js":"3","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\reducers\\uiReducers.js":"4","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\pages\\AudiobookPage.js":"5","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\components\\SearchForm.js":"6","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\index.js":"7","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\types\\types.js":"8","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\components\\AudioBooksTable.js":"9","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\components\\OwnTable.js":"10","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\helper\\table.js":"11","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\components\\FormAdd.js":"12","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\contex\\FormContext.js":"13","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\helper\\fetch.js":"14","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\helper\\iterateData.js":"15"},{"size":416,"mtime":1608963677007,"results":"16","hashOfConfig":"17"},{"size":635,"mtime":1608765327553,"results":"18","hashOfConfig":"17"},{"size":458,"mtime":1608765342500,"results":"19","hashOfConfig":"17"},{"size":503,"mtime":1608763973671,"results":"20","hashOfConfig":"17"},{"size":853,"mtime":1609104588830,"results":"21","hashOfConfig":"17"},{"size":3374,"mtime":1609103537579,"results":"22","hashOfConfig":"17"},{"size":262,"mtime":1608963222827,"results":"23","hashOfConfig":"17"},{"size":1094,"mtime":1608763965574,"results":"24","hashOfConfig":"17"},{"size":6626,"mtime":1609107537880,"results":"25","hashOfConfig":"17"},{"size":5290,"mtime":1608924221588,"results":"26","hashOfConfig":"17"},{"size":286,"mtime":1608914585994,"results":"27","hashOfConfig":"17"},{"size":5779,"mtime":1609185049498,"results":"28","hashOfConfig":"17"},{"size":729,"mtime":1608964265145,"results":"29","hashOfConfig":"17"},{"size":1204,"mtime":1609107387055,"results":"30","hashOfConfig":"17"},{"size":1133,"mtime":1609102801450,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"s0sj58",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\AudiobooksCrudApp.js",[],["71","72"],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\store\\store.js",[],["73","74"],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\reducers\\bookReducers.js",[],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\reducers\\uiReducers.js",[],["75","76"],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\pages\\AudiobookPage.js",["77","78"],"import { Modal } from 'antd';\r\nimport React, { useContext} from 'react'\r\nimport { AudioBooksTable } from '../components/AudioBooksTable'\r\n// import { OwnTable } from '../components/OwnTable'\r\nimport { SearchForm } from '../components/SearchForm'\r\n\r\nimport { FormAdd } from '../components/FormAdd';\r\n\r\nimport { FormContext } from '../contex/FormContext';\r\n\r\n\r\nexport const AudiobookPage = () => {\r\n    const { showModal, handleOk, handleCancel, isModalVisible, setIsModalVisible } = useContext(FormContext);\r\n\r\n    return (\r\n        <div className=\"audiobook__container\">\r\n            <SearchForm />\r\n            <AudioBooksTable />\r\n            {/* <OwnTable/> */}\r\n\r\n            <Modal title=\"Basic Modal\" visible={isModalVisible} onOk={handleOk} onCancel={handleCancel}>\r\n                <FormAdd />\r\n            </Modal>\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\components\\SearchForm.js",["79"],"import React, { useEffect, useRef, useState } from 'react';\r\n\r\n// component of item from content type\r\nconst TypesItem = ({ item, setItem = null, }) => {\r\n\r\n    const type = useRef();\r\n    const container = useRef();\r\n    useEffect(() => {\r\n        container.current = document.querySelector('.selected-item-container');\r\n    }, []);\r\n\r\n    const handleClick = () => {\r\n        setItem && setItem(item);\r\n        container.current.style.flexBasis = type.current.clientWidth + 6 + 'px';\r\n        container.current.classList.remove('hideWith');\r\n    }\r\n    return (\r\n\r\n        <div ref={type} className={\"typeitem\"} onClick={handleClick}>\r\n            <span>{item}</span>\r\n        </div>\r\n\r\n    )\r\n}\r\n//searchform\r\nexport const SearchForm = () => {\r\n\r\n    const [items, setItems] = useState([\"title\", \"authors\", \"cost\", \"duration\", \"updated\"]);\r\n    const [item, setitem] = useState(null)\r\n\r\n    useEffect(() => {\r\n        const contentType = document.querySelector('.searchform__contentype');\r\n\r\n        const hideContentType = ({ target }) => {\r\n            if (!target.closest('.searchform__container')) {\r\n                contentType.classList.add('moveDown');\r\n            }\r\n        }\r\n\r\n        window.addEventListener('click', hideContentType);\r\n\r\n        return () => window.removeEventListener('click', hideContentType);\r\n    }, []);\r\n\r\n\r\n    const handleCloseSearch = (e) => {\r\n        e.preventDefault();\r\n        const selectedItemContainer = document.querySelector('.selected-item-container');\r\n        selectedItemContainer.style.flexBasis = 0;\r\n        selectedItemContainer.classList.add('hideWith');\r\n    }\r\n\r\n    const handleSearch = (e) => {\r\n        e.preventDefault();\r\n    }\r\n\r\n    const handleFocus = () => {\r\n        const contentType = document.querySelector('.searchform__contentype');\r\n        contentType.classList.remove('moveDown');\r\n    }\r\n    return (\r\n        <div className=\"searchform__container\">\r\n            <form action=\"\" onSubmit={handleSearch} className=\"searchform__form\">\r\n                <div className=\"outer-search\">\r\n                    <div className=\"searchform__search d-flex align-items-center p-2\">\r\n                        <div className=\"selected-item-container hideWith\">\r\n                            {\r\n                                item && <TypesItem key={item.toString()} item={item} />\r\n                            }\r\n                        </div>\r\n                        <div className=\"input-search\">\r\n                            <input type=\"text\" placeholder=\"Search\" className=\" pl-1 w-100\"\r\n                                onFocus={handleFocus}\r\n                            />\r\n                            <button className=\"btnclose\" onClick={handleCloseSearch}>\r\n                                <i className=\"fas fa-times\"></i>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"outer-contentype\">\r\n                    <div className=\"searchform__contentype moveDown\">\r\n                        {\r\n                            items.map((item, ind) => (\r\n                                <TypesItem key={ind} item={item} setItem={setitem} />\r\n                            ))\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    )\r\n}\r\n","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\index.js",[],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\types\\types.js",[],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\components\\AudioBooksTable.js",["80","81","82","83"],"import React, { useContext, useEffect, useState } from 'react'\r\nimport { Table } from 'antd';\r\nimport { DeleteOutlined, EditOutlined, ExclamationCircleOutlined, PlusOutlined } from '@ant-design/icons';\r\nimport moment from 'moment';\r\nimport confirm from 'antd/lib/modal/confirm';\r\n\r\nimport { FormContext } from '../contex/FormContext';\r\nimport { fetchData } from '../helper/fetch';\r\nimport { mapData } from '../helper/iterateData';\r\nimport Modal from 'antd/lib/modal/Modal';\r\n\r\nconst columns = [\r\n    { title: 'Title', dataIndex: 'title', key: 'title', sorter: (a, b) => a.title - b.title, },\r\n    // { title: 'Conten Type', dataIndex: 'content-type', key: 'contentType', responsive: ['lg'] },\r\n    { title: 'Updated', dataIndex: 'street_date', key: 'street_date', responsive: ['lg'], sorter: (a, b) => moment(a.dateToSort, 'DD-MM-YYYY, h:mm:ss') - moment(b.dateToSort, 'DD-MM-YYYY') },\r\n    { title: 'Authors', dataIndex: 'authors', key: 'authors', responsive: ['sm'] },\r\n    { title: 'Cost per play', dataIndex: 'cost_per_play', key: 'cost_per_play', responsive: ['md'], sorter: (a, b) => a.cost_per_play - b.cost_per_play },\r\n    { title: 'Duration (h:m)', dataIndex: 'duration', key: 'duration', responsive: ['md'], sorter: (a, b) => moment(a.duration, 'HH:mm:ss') - moment(b.duration, 'HH:mm:ss') },\r\n    { title: 'Cover', dataIndex: 'cover', key: 'cover', responsive: ['lg'], render: cover => <div className=\"outer-image\"><img alt={cover} src={cover} className=\"imageTable\" /></div>, },\r\n];\r\nexport const AudioBooksTable = () => {\r\n\r\n\r\n    const { showModal, handleOk, handleCancel, isModalVisible, setIsModalVisible } = useContext(FormContext);\r\n\r\n    const [stateSelect, setStateSelect] = useState({\r\n        selectedRowKeys: []\r\n    });\r\n    const { selectedRowKeys } = stateSelect;\r\n\r\n    const [audioBooks, setAudioBooks] = useState(null);\r\n\r\n    useEffect(() => {\r\n        fetchData().then(({ items }) => {\r\n            const ab = mapData(items);\r\n            // console.log(ab);\r\n            setAudioBooks(ab);\r\n        })\r\n    }, [audioBooks]);\r\n    const onSelectChange = selectedRowKeys => {\r\n        console.log('selectedRowKeys changed: ', selectedRowKeys);\r\n        setStateSelect({ selectedRowKeys });\r\n        getRow(selectedRowKeys);\r\n    }\r\n\r\n    const getRow = (selectedRowKeys) => {\r\n        console.log(selectedRowKeys)\r\n        return audioBooks.find((row) => row.key === selectedRowKeys[0]);\r\n    }\r\n\r\n    const rowSelection = {\r\n        selectedRowKeys,\r\n        onChange: onSelectChange,\r\n        selections: [\r\n            Table.SELECTION_ALL,\r\n            Table.SELECTION_INVERT,\r\n            {\r\n                key: 'odd',\r\n                text: 'Select Odd Row',\r\n                onSelect: changableRowKeys => {\r\n                    let newSelectedRowKeys = [];\r\n                    newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                        if (index % 2 !== 0) {\r\n                            return false;\r\n                        }\r\n                        return true;\r\n                    });\r\n                    setStateSelect({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            },\r\n            {\r\n                key: 'even',\r\n                text: 'Select Even Row',\r\n                onSelect: changableRowKeys => {\r\n                    let newSelectedRowKeys = [];\r\n                    newSelectedRowKeys = changableRowKeys.filter((key, index) => {\r\n                        if (index % 2 !== 0) {\r\n                            return true;\r\n                        }\r\n                        return false;\r\n                    });\r\n                    setStateSelect({ selectedRowKeys: newSelectedRowKeys });\r\n                },\r\n            },\r\n        ],\r\n    };\r\n\r\n    /* -------------------------------------------------------------------------- */\r\n    /*                                   button                                   */\r\n    /* -------------------------------------------------------------------------- */\r\n\r\n    /* -------------------------------------------------------------------------- */\r\n    /*                                    CRUD                                    */\r\n    /* -------------------------------------------------------------------------- */\r\n\r\n    // DELETE\r\n    function showConfirm() {\r\n        confirm({\r\n            title: 'Do you Want to delete these items?',\r\n            icon: <ExclamationCircleOutlined />,\r\n            content: 'Some descriptions',\r\n            onOk() {\r\n                const id = selectedRowKeys[0];\r\n                console.log(id);\r\n                fetchData('DELETE', { id }).then((res) => {\r\n                    !res?.ok && error();\r\n                });\r\n            },\r\n            onCancel() {\r\n                console.log('Cancel');\r\n            },\r\n        });\r\n    }\r\n    function error() {\r\n        Modal.error({\r\n            title: 'This is an error message',\r\n            content: 'could not be deleted, check with the administrator',\r\n        });\r\n    }\r\n\r\n    // \r\n\r\n    return (\r\n        <div className=\"m-table-container\">\r\n            <div className=\"table-info d-flex align-items-center\">\r\n                <div className=\"bnts-operations d-flex justify-content-center align-items-center\">\r\n                    {\r\n                        (selectedRowKeys.length === 1)\r\n                        && <EditOutlined className=\"btn-edit-book\" onClick={showModal} />\r\n                    }\r\n                    {\r\n                        (selectedRowKeys.length > 0)\r\n                        && <DeleteOutlined className=\"btn-delete-book\" onClick={showConfirm} />\r\n                    }\r\n                </div>\r\n\r\n                <span className=\"table-row-selected\">\r\n                    {selectedRowKeys.length} row selected\r\n                </span>\r\n                <div className=\"table-usage-by-entry\">\r\n                    <span>showing</span> 1-5 of 1000\r\n                </div>\r\n\r\n                <div className=\"box-btn-add\" onClick={showModal}>\r\n                    <PlusOutlined className=\"btn-add-book\" />\r\n                </div>\r\n\r\n            </div>\r\n            <Table\r\n                rowSelection={rowSelection}\r\n                columns={columns}\r\n                dataSource={audioBooks}\r\n                expandable={{\r\n                    expandedRowRender: record => <p style={{ margin: 0 }}>Hello</p>,\r\n                    rowExpandable: record => record.name !== 'Not Expandable',\r\n                }}\r\n                scroll={{ y: 400 }}\r\n                rowClassName={'table__row'}\r\n            />;\r\n\r\n        </div>\r\n    )\r\n}\r\n","D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\components\\OwnTable.js",["84"],"import React, { useEffect, useRef, useState } from 'react'\r\nimport { calcBreakPoint } from '../helper/table';\r\n\r\n// const data = [\"hello\", \"bye\", \"good\", \"well\", \"see\"];\r\n\r\n\r\nconst TableRow = ({ row }) => {\r\n\r\n    // const tRow = useRef();\r\n\r\n    // useEffect(() => {\r\n    //     tRow.current = document.querySelector('.row-table');\r\n    //     const row = tRow.current;\r\n    //     console.log(row.cells[1].offsetWidth);\r\n    // }, [])\r\n\r\n\r\n    return (\r\n        <tr /*ref={tRow}*/ className=\"row-table\">\r\n            <td><input type=\"checkbox\" /></td>\r\n            <td>\r\n                <div>{row}</div>\r\n            </td>\r\n            <td>\r\n                <div>Matman</div>\r\n            </td>\r\n            <td>\r\n                <div>Chief Sandwich Eater</div>\r\n            </td>\r\n        </tr>\r\n    )\r\n}\r\nexport const OwnTable = () => {\r\n\r\n    const [colsHide, setColsHide] = useState([]);\r\n    const counterRef = useRef(1);\r\n    // const [last, setlast] = useState(null);\r\n    const tdDivs = useRef();\r\n    const thDiv = useRef();\r\n    const bookTable = useRef();\r\n\r\n    const onceResize = useRef(true);\r\n\r\n    useEffect(() => {\r\n\r\n        tdDivs.current = document.querySelectorAll(`.row-table > td:nth-last-child(${counterRef.current}) > div`);\r\n        thDiv.current = document.querySelector(`thead th:nth-last-child(${counterRef.current}) > div`);\r\n        bookTable.current = document.querySelector('.book-table') \r\n        // console.log(tdDivs.current);\r\n\r\n\r\n        const resizeTable = (e = null) => {\r\n\r\n            onceResize.current = e ? false : true;\r\n\r\n\r\n            const DivMaxwidth = [...tdDivs.current, thDiv.current].sort((a, b) => (b.offsetWidth - a.offsetWidth))[0];\r\n            const percentBreakPoint = calcBreakPoint(DivMaxwidth);\r\n            // console.log(percentBreakPoint);\r\n            if (percentBreakPoint >= 90) {\r\n                // break point to serve to again show the column\r\n                const breakPoint = bookTable.current.offsetWidth + DivMaxwidth.parentNode.offsetWidth;\r\n                hideCol(breakPoint);\r\n            }\r\n            if (percentBreakPoint < 90) {\r\n                // check there are cols hide\r\n                if (colsHide.length > 0) {\r\n                    if (window.innerWidth > colsHide[0].breakPoint) {\r\n                        showCol();\r\n                    }\r\n                }\r\n            }\r\n\r\n            function hideCol(br) {\r\n                const tdsLastlist = document.querySelectorAll(`.row-table > td:nth-last-child(${counterRef.current})`);\r\n                const thLast = document.querySelector(`thead th:nth-last-child(${counterRef.current})`);\r\n                // hide last col\r\n                thLast.classList.add('d-none');\r\n                tdsLastlist.forEach(td => td.classList.add('d-none'));\r\n\r\n                counterRef.current += 1;\r\n                setColsHide([{ tdsLastlist, thLast, breakPoint: br }, ...colsHide]);\r\n            }\r\n            function showCol() {\r\n                // add th\r\n                colsHide[0].thLast.classList.remove('d-none');\r\n                const tdsList = colsHide[0].tdsLastlist;\r\n                tdsList.forEach(td => td.classList.remove('d-none'))\r\n\r\n                counterRef.current -= 1;\r\n                setColsHide(colsHide => colsHide.splice(1));\r\n            }\r\n\r\n        }\r\n        // redimensionar al inicio\r\n        onceResize.current && resizeTable();\r\n\r\n        window.addEventListener('resize', resizeTable);\r\n\r\n        return () => window.removeEventListener('resize', resizeTable);\r\n    }, [colsHide]);\r\n\r\n\r\n    return (\r\n        <table className=\"book-table\">\r\n            <thead>\r\n                <tr>\r\n                    <th><div><input type=\"checkbox\" /></div></th>\r\n                    <th><div>First Name</div></th>\r\n                    <th><div>Last Name adasdasdasdasdasdasd</div></th>\r\n                    <th><div>Job Title</div></th>\r\n                    <th><div>cyty</div></th>\r\n                </tr>\r\n            </thead>\r\n            <tbody>\r\n                <tr /*ref={tRow}*/ className=\"row-table\">\r\n                    <td><input type=\"checkbox\" /></td>\r\n                    <td>\r\n                        <div>Rosa</div>\r\n                    </td>\r\n                    <td>\r\n                        <div>Matman</div>\r\n                    </td>\r\n                    <td>\r\n                        <div>Chief Sandwich Eater</div>\r\n                    </td>\r\n                    <td>\r\n                        <div>bucaran Sandwich Eater</div>\r\n                    </td>\r\n                </tr>\r\n                <tr /*ref={tRow}*/ className=\"row-table\">\r\n                    <td><input type=\"checkbox\" /></td>\r\n                    <td>\r\n                        <div>Daniel</div>\r\n                    </td>\r\n                    <td>\r\n                        <div>Matman</div>\r\n                    </td>\r\n                    <td>\r\n                        <div>Chief Sandwich</div>\r\n                    </td>\r\n                    <td>\r\n                        <div>tngama as sdasda sd as d</div>\r\n                    </td>\r\n                </tr>\r\n                {/* {\r\n                    data.map((row, ind) => <TableRow key={ind} row={row} />)\r\n                } */}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}\r\n",["85","86"],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\helper\\table.js",[],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\components\\FormAdd.js",["87","88","89","90","91","92","93"],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\contex\\FormContext.js",[],["94","95"],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\helper\\fetch.js",[],"D:\\Proyectos\\prueba de empleo\\crud-audiobooks-app\\src\\helper\\iterateData.js",[],{"ruleId":"96","replacedBy":"97"},{"ruleId":"98","replacedBy":"99"},{"ruleId":"96","replacedBy":"100"},{"ruleId":"98","replacedBy":"101"},{"ruleId":"96","replacedBy":"102"},{"ruleId":"98","replacedBy":"103"},{"ruleId":"104","severity":1,"message":"105","line":13,"column":13,"nodeType":"106","messageId":"107","endLine":13,"endColumn":22},{"ruleId":"104","severity":1,"message":"108","line":13,"column":64,"nodeType":"106","messageId":"107","endLine":13,"endColumn":81},{"ruleId":"104","severity":1,"message":"109","line":28,"column":19,"nodeType":"106","messageId":"107","endLine":28,"endColumn":27},{"ruleId":"104","severity":1,"message":"110","line":24,"column":24,"nodeType":"106","messageId":"107","endLine":24,"endColumn":32},{"ruleId":"104","severity":1,"message":"111","line":24,"column":34,"nodeType":"106","messageId":"107","endLine":24,"endColumn":46},{"ruleId":"104","severity":1,"message":"112","line":24,"column":48,"nodeType":"106","messageId":"107","endLine":24,"endColumn":62},{"ruleId":"104","severity":1,"message":"108","line":24,"column":64,"nodeType":"106","messageId":"107","endLine":24,"endColumn":81},{"ruleId":"104","severity":1,"message":"113","line":7,"column":7,"nodeType":"106","messageId":"107","endLine":7,"endColumn":15},{"ruleId":"96","replacedBy":"114"},{"ruleId":"98","replacedBy":"115"},{"ruleId":"104","severity":1,"message":"116","line":2,"column":44,"nodeType":"106","messageId":"107","endLine":2,"endColumn":50},{"ruleId":"104","severity":1,"message":"117","line":2,"column":52,"nodeType":"106","messageId":"107","endLine":2,"endColumn":57},{"ruleId":"118","severity":1,"message":"119","line":37,"column":15,"nodeType":"120","messageId":"121","endLine":37,"endColumn":38},{"ruleId":"118","severity":1,"message":"119","line":39,"column":16,"nodeType":"120","messageId":"121","endLine":39,"endColumn":48},{"ruleId":"118","severity":1,"message":"119","line":40,"column":17,"nodeType":"120","messageId":"121","endLine":40,"endColumn":50},{"ruleId":"118","severity":1,"message":"119","line":43,"column":16,"nodeType":"120","messageId":"121","endLine":43,"endColumn":60},{"ruleId":"104","severity":1,"message":"122","line":52,"column":12,"nodeType":"106","messageId":"107","endLine":52,"endColumn":16},{"ruleId":"96","replacedBy":"123"},{"ruleId":"98","replacedBy":"124"},"no-native-reassign",["125"],"no-negated-in-lhs",["126"],["125"],["126"],["125"],["126"],"no-unused-vars","'showModal' is assigned a value but never used.","Identifier","unusedVar","'setIsModalVisible' is assigned a value but never used.","'setItems' is assigned a value but never used.","'handleOk' is assigned a value but never used.","'handleCancel' is assigned a value but never used.","'isModalVisible' is assigned a value but never used.","'TableRow' is assigned a value but never used.",["125"],["126"],"'Select' is defined but never used.","'Space' is defined but never used.","no-template-curly-in-string","Unexpected template string expression.","Literal","unexpectedTemplateExpression","'form' is assigned a value but never used.",["125"],["126"],"no-global-assign","no-unsafe-negation"]